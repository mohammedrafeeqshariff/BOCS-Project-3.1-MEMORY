// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here
    DMux8Way(in=load, sel=address, a=dA, b=dB, c=dC, d=dD, e=dE, f=dF, g=dG, h=dH);

    Register(in=in, load=dA, out=memoryA);
    Register(in=in, load=dB, out=memoryB);
    Register(in=in, load=dC, out=memoryC);
    Register(in=in, load=dD, out=memoryD);
    Register(in=in, load=dE, out=memoryE);
    Register(in=in, load=dF, out=memoryF);
    Register(in=in, load=dG, out=memoryG);
    Register(in=in, load=dH, out=memoryH);

    Mux8Way16(a=memoryA, b=memoryB, c=memoryC, d=memoryD, e=memoryE, f=memoryF, g=memoryG, h=memoryH, sel=address, out=out);
}